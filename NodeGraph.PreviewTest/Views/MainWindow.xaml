<Window x:Class="NodeGraph.PreviewTest.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:NodeGraph.PreviewTest.ViewModels"
        xmlns:ctrl="clr-namespace:NodeGraph.Controls;assembly=NodeGraph"
        xmlns:local="clr-namespace:NodeGraph.PreviewTest"
        mc:Ignorable="d"
        Title="NodeGraph - prototype" Height="450" Width="800">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <ContextMenu x:Key="NodeGraphContextMenu">
            <MenuItem Header="AddNode" Command="{Binding AddNodeCommand}"/>
            <MenuItem Header="AddGroupNode" Command="{Binding AddGroupNodeCommand}"/>
            <MenuItem Header="RemoveNodes" Command="{Binding RemoveNodesCommand}"/>
        </ContextMenu>

        <Style x:Key="NodeInputStyle" TargetType="{x:Type ctrl:NodeInputContent}" BasedOn="{StaticResource {x:Type ctrl:NodeInputContent}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="Content" Value="{Binding Label}"/>
            <Setter Property="IsEnabled" Value="{Binding IsEnable}"/>
        </Style>

        <Style x:Key="NodeOutputStyle" TargetType="{x:Type ctrl:NodeOutputContent}" BasedOn="{StaticResource {x:Type ctrl:NodeOutputContent}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="Content" Value="{Binding Label}"/>
            <Setter Property="IsEnabled" Value="{Binding IsEnable}"/>
        </Style>

        <Style x:Key="NodeLinkStyle" TargetType="{x:Type ctrl:NodeLink}" BasedOn="{StaticResource {x:Type ctrl:NodeLink}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="InputGuid" Value="{Binding InputGuid, Mode=OneWay}"/>
            <Setter Property="OutputGuid" Value="{Binding OutputGuid, Mode=OneWay}"/>
            <Setter Property="IsEnabled" Value="{Binding IsEnable, Mode=OneWay}"/>
        </Style>

        <Style x:Key="NodeStyle" TargetType="{x:Type ctrl:Node}" BasedOn="{StaticResource {x:Type ctrl:Node}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <!--disconnect position binding if you specify Mode=OneWay, because it will change binding position instance in view control.-->
            <Setter Property="Position" Value="{Binding Position}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <Setter Property="Inputs" Value="{Binding Inputs}"/>
            <Setter Property="InputLayout" Value="Center"/>
            <Setter Property="Outputs" Value="{Binding Outputs}"/>
            <Setter Property="OutputLayout" Value="Center"/>
            <Setter Property="InputMargin" Value="5,1,5,1"/>
            <Setter Property="OutputMargin" Value="4,0,4,10"/>
            <Setter Property="InputStyle" Value="{StaticResource NodeInputStyle}"/>
            <Setter Property="OutputStyle" Value="{StaticResource NodeOutputStyle}"/>
            <Setter Property="SizeChangedCommand" Value="{Binding SizeChangedCommand}"/>
            <Setter Property="HeaderContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Background="#FF666666" DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ctrl:Node}}}">
                            <StackPanel HorizontalAlignment="Center">
                                <Label Content="{Binding Name}"/>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ctrl:Node}}}">
                            <TextBox Text="{Binding Body}"/>
                            <DockPanel TextBlock.Foreground="WhiteSmoke">
                                <TextBlock Margin="0,0,0,4" Text="{Binding Width, StringFormat=Width:{0}}"/>
                                <TextBlock Margin="4,0,0,0" Text="{Binding Height, StringFormat=Height:{0}}"/>
                            </DockPanel>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GroupNodeStyle" TargetType="{x:Type ctrl:GroupNode}" BasedOn="{StaticResource {x:Type ctrl:GroupNode}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <!--disconnect position binding if you specify Mode=OneWay, because it will change binding position instance in view control.-->
            <Setter Property="Position" Value="{Binding Position}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <Setter Property="SizeChangedCommand" Value="{Binding SizeChangedCommand}"/>
            <Setter Property="HeaderContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Background="#FF666666" DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ctrl:GroupNode}}}">
                            <StackPanel HorizontalAlignment="Center">
                                <Label Content="{Binding Name}"/>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" LastChildFill="False">
            <Button Margin="4" Height="24" Content="AddTestNodeLink" Command="{Binding AddTestNodeLinkCommand}"/>
            <Button Margin="4" Height="24" Content="MoveTestNode" Command="{Binding MoveTestNodesCommand}"/>
            <Button Margin="4" Height="24" Content="ClearTestNode" Command="{Binding ClearTestNodesCommand}"/>
            <CheckBox Margin="4" Height="24" Content="IsEnableAllNodeLinks" IsChecked="{Binding IsEnableAllNodeLinks}" VerticalContentAlignment="Center"/>
            <CheckBox Margin="4" Height="24" Content="IsEnableAllNodeConnectors" IsChecked="{Binding IsEnableAllNodeConnectors}" VerticalContentAlignment="Center"/>
        </DockPanel>
        <ctrl:NodeGraph Grid.Row="3"
                        x:Name="NodeGraph"
                        MoveWithMouse="Right"
                        ItemsSource="{Binding NodeViewModels}"
                        ItemContainerStyle="{StaticResource NodeStyle}"
                        NodeLinks="{Binding NodeLinkViewModels}"
                        NodeLinkStyle="{StaticResource NodeLinkStyle}"                        
                        GroupNodes="{Binding GroupNodeViewModels}"
                        GroupNodeStyle="{StaticResource GroupNodeStyle}"
                        PreviewConnectCommand="{Binding PreviewConnectCommand}"
                        ConnectCommand="{Binding ConnectCommand}"
                        DisconnectCommand="{Binding DisconnectCommand}"
                        AllowToOverrideConnection="True"
                        ContextMenu="{StaticResource NodeGraphContextMenu}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding SelectedItems, ElementName=NodeGraph}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ctrl:NodeGraph>
    </Grid>
</Window>
